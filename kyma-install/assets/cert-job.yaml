---
# Source: ingress-dns-cert/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ingress-dns-cert-service-account
  namespace: istio-system
---
# Source: ingress-dns-cert/templates/roles.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: ingress-dns-cert-role
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "create", "patch"]
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["*"]
- apiGroups: ["cert.gardener.cloud"]
  resources: ["certificates"]
  verbs: ["get", "create", "patch"]
- apiGroups: [""]
  resources: ["services"]
  verbs: ["get", "patch"]
---
# Source: ingress-dns-cert/templates/rolebindings.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: ingress-dns-cert-istio-system-role-binding
  namespace: istio-system
subjects:
- kind: ServiceAccount
  name: ingress-dns-cert-service-account
  namespace: istio-system
roleRef:
  kind: ClusterRole
  name: ingress-dns-cert-role
  apiGroup: rbac.authorization.k8s.io
---
# Source: ingress-dns-cert/templates/rolebindings.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: ingress-dns-cert-kyma-system-role-binding
  namespace: kyma-system
subjects:
- kind: ServiceAccount
  name: ingress-dns-cert-service-account
  namespace: istio-system
roleRef:
  kind: ClusterRole
  name: ingress-dns-cert-role
  apiGroup: rbac.authorization.k8s.io
---
# Source: ingress-dns-cert/templates/job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: ingress-dns-cert-copy-cert
  namespace: istio-system
spec:
  template:
    metadata:
      name: ingress-dns-cert
    spec:
      serviceAccount: ingress-dns-cert-service-account
      restartPolicy: Never
      containers:
      - name: ingress-dns-cert-job1
        image: eu.gcr.io/kyma-project/test-infra/alpine-kubectl:v20200309-9a88ce97
        command: ["/bin/sh", ]
        args: ["-c","kubectl create secret tls kyma-gateway-certs -n kyma-system --cert=/etc/kyma-gateway-certs/tls.crt --key=/etc/kyma-gateway-certs/tls.key --dry-run -oyaml |
  kubectl apply -f -"]
        volumeMounts:
        - name: cert
          mountPath: /etc/kyma-gateway-certs/
      - name: ingress-dns-cert-job2
        image: eu.gcr.io/kyma-project/test-infra/alpine-kubectl:v20200309-9a88ce97
        command: ["/bin/sh", ]
        args: ["-c","kubectl create secret generic ingress-tls-cert -n kyma-system --from-file=tls.crt=/etc/kyma-gateway-certs/tls.crt --dry-run -oyaml |
  kubectl apply -f -"]
        volumeMounts:
        - name: cert
          mountPath: /etc/kyma-gateway-certs/
      - name: ingress-dns-cert-job3
        image: eu.gcr.io/kyma-project/test-infra/alpine-kubectl:v20200309-9a88ce97
        command: ["/bin/sh", ]
        args: ["-c","kubectl create secret tls apiserver-proxy-tls-cert -n kyma-system --cert=/etc/kyma-gateway-certs/tls.crt --key=/etc/kyma-gateway-certs/tls.key --dry-run -oyaml |
  kubectl apply -f -"]
        volumeMounts:
        - name: cert
          mountPath: /etc/kyma-gateway-certs/
      volumes:
        - name: cert
          secret:
            secretName: kyma-gateway-certs
  backoffLimit: 4
